{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","SearchBar","dispatch","useDispatch","text","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","a","fetch","res","json","data","payload","response","searchLogs","current","value","htmlFor","LogItem","log","href","attention","onClick","setCurrent","message","tech","format","date","axios","delete","statusText","M","toast","html","Preloader","Logs","useEffect","useSelector","state","logs","loading","length","map","key","AddBtn","getTechs","TechSelectOptions","techs","t","firstName","lastName","modalStyle","width","height","AddLogModal","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","post","EditLogModal","updLog","put","method","body","JSON","stringify","headers","AddTechModal","setFirstName","setLastName","TechItem","deleteTech","TechListModal","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0209773d.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  SET_CURRENT,\n  SEARCH_LOGS,\n  CLEAR_CURRENT,\n  UPDATE_LOG,\n} from \"./types\";\n\n// Get logs from server\nexport const getLogs = () => async (dispatch) => {\n  try {\n    setLoading();\n\n    const { data } = await axios(\"/logs\");\n\n    dispatch({\n      type: GET_LOGS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n// Add new log\nexport const addLog = (log) => async (dispatch) => {\n  try {\n    setLoading();\n\n    const { data } = await axios.post(\"/logs\", log);\n\n    dispatch({\n      type: ADD_LOG,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n// Delete log from server\nexport const deleteLog = (id) => async (dispatch) => {\n  try {\n    setLoading();\n\n    await axios.delete(`/logs/${id}`);\n\n    dispatch({\n      type: DELETE_LOG,\n      payload: id,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n// Update log from server\nexport const updateLog = (log) => async (dispatch) => {\n  try {\n    setLoading();\n\n    const res = await axios.put(`/logs/${log.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(log),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    const data = await res.json();\n\n    dispatch({\n      type: UPDATE_LOG,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n// Set current log\nexport const setCurrent = (log) => {\n  return {\n    type: SET_CURRENT,\n    payload: log,\n  };\n};\n\n// Search logs\nexport const searchLogs = (text) => async (dispatch) => {\n  try {\n    setLoading();\n\n    const res = await fetch(`/logs?q=${text}`);\n    const data = await res.json();\n\n    dispatch({\n      type: SEARCH_LOGS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data,\n    });\n  }\n};\n\n// Set current log\nexport const clearCurrent = (log) => {\n  return {\n    type: CLEAR_CURRENT,\n  };\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n","export const GET_LOGS = 'GET_LOGS';\nexport const ADD_LOG = 'ADD_LOG';\nexport const DELETE_LOG = 'DELETE_LOG';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\nexport const UPDATE_LOG = 'UPDATE_LOG';\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const LOGS_ERROR = 'LOGS_ERROR';\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\nexport const GET_TECHS = 'GET_TECHS';\nexport const ADD_TECH = 'ADD_TECH';\nexport const DELETE_TECH = 'DELETE_TECH';\nexport const TECHS_ERROR = 'TECHS_ERROR';\n","import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { searchLogs } from \"../../actions/logActions\";\n\nconst SearchBar = () => {\n  const dispatch = useDispatch();\n\n  const text = useRef(\"\");\n\n  const onChange = (e) => {\n    dispatch(searchLogs(text.current.value));\n  };\n\n  return (\n    <nav style={{ marginBottom: \"30px\" }} className=\"blue\">\n      <div className=\"nav-wrapper\">\n        <form>\n          <div className=\"input-field\">\n            <input\n              id=\"search\"\n              type=\"search\"\n              placeholder=\"Search Logs..\"\n              ref={text}\n              onChange={onChange}\n            />\n            <label className=\"label-icon\" htmlFor=\"search\">\n              <i className=\"material-icons\">search</i>\n            </label>\n            <i className=\"material-icons\">close</i>\n          </div>\n        </form>\n      </div>\n    </nav>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport Moment from \"react-moment\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteLog, setCurrent } from \"../../actions/logActions\";\n\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst LogItem = ({ log }) => {\n  const dispatch = useDispatch();\n\n  const onDelete = () => {\n    dispatch(deleteLog(log.id));\n    M.toast({ html: \"Log Deleted\" });\n  };\n\n  return (\n    <li className=\"collection-item\">\n      <div>\n        <a\n          href=\"#edit-log-modal\"\n          className={`modal-trigger ${\n            log.attention ? \"red-text\" : \"blue-text\"\n          }`}\n          onClick={() => dispatch(setCurrent(log))}\n        >\n          {log.message}\n        </a>\n        <br />\n        <span className=\"grey-text\">\n          <span className=\"black-text\">ID #{log.id}</span> last updated by{\" \"}\n          <span className=\"black-text\">{log.tech}</span> on{\" \"}\n          <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{log.date}</Moment>\n        </span>\n        <a href=\"#!\" onClick={onDelete} className=\"secondary-content\">\n          <i className=\"material-icons grey-text\">delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nexport default LogItem;\n","import React from 'react';\n\nconst Preloader = () => {\n  return (\n    <div className=\"progress blue lighten-4\">\n      <div className=\"indeterminate blue\" />\n    </div>\n  );\n};\n\nexport default Preloader;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LogItem from \"./LogItem\";\nimport Preloader from \"../layout/Preloader\";\nimport { getLogs } from \"../../actions/logActions\";\n\nconst Logs = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getLogs());\n  }, [dispatch]);\n\n  const { logs, loading } = useSelector((state) => state.log);\n\n  if (loading || logs === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <ul className=\"collection with-header\">\n        <li className=\"collection-header\">\n          <h4 className=\"center\">System Logs</h4>\n        </li>\n        {!loading && logs.length === 0 ? (\n          <p className=\"center\">No logs to show...</p>\n        ) : (\n          logs.map((log) => <LogItem log={log} key={log.id} />)\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Logs;\n","import React from 'react';\n\nconst AddBtn = () => {\n  return (\n    <div className=\"fixed-action-btn\">\n      <a\n        href=\"#add-log-modal\"\n        className=\"btn-floating btn-large blue darken-2 modal-trigger\"\n      >\n        <i className=\"large material-icons\">add</i>\n      </a>\n      <ul>\n        <li>\n          <a\n            href=\"#tech-list-modal\"\n            className=\"btn-floating green modal-trigger\"\n          >\n            <i className=\"material-icons\">person</i>\n          </a>\n        </li>\n        <li>\n          <a href=\"#add-tech-modal\" className=\"btn-floating red modal-trigger\">\n            <i className=\"material-icons\">person_add</i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import axios from \"axios\";\nimport {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR,\n} from \"./types\";\n\n// Get techs from server\nexport const getTechs = () => async (dispatch) => {\n  try {\n    setLoading();\n\n    const { data } = await axios(\"/techs\");\n\n    dispatch({\n      type: GET_TECHS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n// Add tech to server\nexport const addTech = (tech) => async (dispatch) => {\n  try {\n    setLoading();\n\n    const { data } = await axios.post(\"/techs\", tech);\n\n    dispatch({\n      type: ADD_TECH,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n// Delete tech from server\nexport const deleteTech = (id) => async (dispatch) => {\n  try {\n    setLoading();\n\n    await axios.delete(`/techs/${id}`);\n\n    dispatch({\n      type: DELETE_TECH,\n      payload: id,\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n// Set loading\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTechs } from \"../../actions/techActions\";\n\nconst TechSelectOptions = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTechs());\n  }, [dispatch]);\n\n  const { techs, loading } = useSelector((state) => state.tech);\n\n  return (\n    !loading &&\n    techs !== null &&\n    techs.map((t) => (\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\n        {t.firstName} {t.lastName}\n      </option>\n    ))\n  );\n};\n\nexport default TechSelectOptions;\n","import React, { useState } from \"react\";\nimport TechSelectOptions from \"../techs/TechSelectOptions\";\nimport { useDispatch } from \"react-redux\";\nimport { addLog } from \"../../actions/logActions\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst AddLogModal = () => {\n  const dispatch = useDispatch();\n\n  const [message, setMessage] = useState(\"\");\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState(\"\");\n\n  const onSubmit = () => {\n    if (message === \"\" || tech === \"\") {\n      M.toast({ html: \"Please enter a message and tech\" });\n    } else {\n      const newLog = {\n        message,\n        attention,\n        tech,\n        date: new Date(),\n      };\n\n      dispatch(addLog(newLog));\n\n      M.toast({ html: `Log added by ${tech}` });\n\n      // Clear Fields\n      setMessage(\"\");\n      setTech(\"\");\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\n      <div className=\"modal-content\">\n        <h4>Enter System Log</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"message\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n            <label htmlFor=\"message\" className=\"active\">\n              Log Message\n            </label>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <select\n              name=\"tech\"\n              value={tech}\n              className=\"browser-default\"\n              onChange={(e) => setTech(e.target.value)}\n            >\n              <option value=\"\" disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <p>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  className=\"filled-in\"\n                  checked={attention}\n                  value={attention}\n                  onChange={(e) => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a\n          href=\"#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect blue waves-light btn\"\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\",\n};\n\nexport default AddLogModal;\n","import React, { useState, useEffect } from \"react\";\nimport TechSelectOptions from \"../techs/TechSelectOptions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { updateLog } from \"../../actions/logActions\";\n\nexport const EditLogModal = () => {\n  const dispatch = useDispatch();\n\n  const [message, setMessage] = useState(\"\");\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState(\"\");\n\n  const current = useSelector((state) => state.current);\n\n  useEffect(() => {\n    if (current) {\n      setMessage(current.message);\n      setAttention(current.attention);\n      setTech(current.tech);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    if (message === \"\" || tech === \"\") {\n      M.toast({ html: \"Please enter a message and tech\" });\n    } else {\n      const updLog = {\n        id: current.id,\n        message,\n        attention,\n        tech,\n        data: new Date(),\n      };\n\n      dispatch(updateLog(updLog));\n      M.toast({ html: `Log updated by ${tech}` });\n\n      // Clear Fields\n      setMessage(\"\");\n      setTech(\"\");\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\n      <div className=\"modal-content\">\n        <h4>Enter System Log</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"message\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <select\n              name=\"tech\"\n              value={tech}\n              className=\"browser-default\"\n              onChange={(e) => setTech(e.target.value)}\n            >\n              <option value=\"\" disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <p>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  className=\"filled-in\"\n                  checked={attention}\n                  value={attention}\n                  onChange={(e) => setAttention(!attention)}\n                />\n                <span>Needs Attentions</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a\n          href=\"#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect blue wave-light btn\"\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\",\n};\n\nexport default EditLogModal;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTech } from \"../../actions/techActions\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nexport const AddTechModal = () => {\n  const dispatch = useDispatch();\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const onSubmit = () => {\n    if (firstName === \"\" || lastName === \"\") {\n      M.toast({ html: \"Please enter the first and last name\" });\n    } else {\n      dispatch(addTech({ firstName, lastName }));\n\n      M.toast({ html: `${firstName} ${lastName} was added as a tech` });\n\n      setFirstName(\"\");\n      setLastName(\"\");\n    }\n  };\n\n  return (\n    <div id=\"add-tech-modal\" className=\"modal\">\n      <div className=\"modal-content\">\n        <h4>New Technician</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            <label htmlFor=\"firstName\" className=\"active\">\n              First Name\n            </label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n            />\n            <label htmlFor=\"lastName\" className=\"active\">\n              Last Name\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a\n          href=\"#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect blue wave-light btn\"\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default AddTechModal;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTech } from \"../../actions/techActions\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst TechItem = ({ tech: { firstName, lastName, id } }) => {\n  const dispatch = useDispatch();\n\n  const onDelete = () => {\n    dispatch(deleteTech(id));\n    M.toast({ html: \"Technician deleted\" });\n  };\n\n  return (\n    <li className=\"collection-item\">\n      <div>\n        {firstName} {lastName}\n        <a href=\"#!\" className=\"secondary-content\" onClick={onDelete}>\n          <i className=\"material-icons grey-text\">delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nexport default TechItem;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TechItem from \"./TechItem\";\nimport { getTechs } from \"../../actions/techActions\";\n\nconst TechListModal = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTechs());\n  }, [dispatch]);\n\n  const { techs, loading } = useSelector((state) => state.tech);\n\n  return (\n    <div id=\"tech-list-modal\" className=\"modal\">\n      <div className=\"modal-content\">\n        <h4>Technician List</h4>\n        <ul className=\"collection\">\n          {!loading &&\n            techs !== null &&\n            techs.map((tech) => <TechItem tech={tech} key={tech.id} />)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TechListModal;\n","import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  UPDATE_LOG,\n  SEARCH_LOGS,\n  SET_CURRENT,\n  CLEAR_CURRENT\n} from '../actions/types';\n\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n        loading: false\n      };\n    case ADD_LOG:\n      return {\n        ...state,\n        logs: [...state.logs, action.payload],\n        loading: false\n      };\n    case DELETE_LOG:\n      return {\n        ...state,\n        logs: state.logs.filter(log => log.id !== action.payload),\n        loading: false\n      };\n    case UPDATE_LOG:\n      return {\n        ...state,\n        logs: state.logs.map(log =>\n          log.id === action.payload.id ? action.payload : log\n        )\n      };\n    case SEARCH_LOGS:\n      return {\n        ...state,\n        logs: action.payload\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TECHS:\n      return {\n        ...state,\n        techs: action.payload,\n        loading: false\n      };\n    case ADD_TECH:\n      return {\n        ...state,\n        techs: [...state.techs, action.payload],\n        loading: false\n      };\n    case DELETE_TECH:\n      return {\n        ...state,\n        techs: state.techs.filter(tech => tech.id !== action.payload),\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case TECHS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport logReducer from './logReducer';\nimport techReducer from './techReducer';\n\nexport default combineReducers({\n  log: logReducer,\n  tech: techReducer\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { useEffect, Fragment } from 'react';\nimport SearchBar from './components/layout/SearchBar';\nimport Logs from './components/logs/Logs';\nimport AddBtn from './components/layout/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    // Init Materialize JS\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className=\"container\">\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}